# An example log4j configuration file that outputs to System.out.  The
# output information consists of relative time, log level, thread
# name, logger name, nested diagnostic context and the message in that
# order.

# For the general syntax of property based configuration files see the
# documenation of org.apache.log4j.PropertyConfigurator.
# levels DEBUG < INFO < WARN < ERROR < FATAL

log4j.rootLogger=INFO,A1,A2


log4j.appender.A2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A2.Threshold=INFO
log4j.appender.A2.Append=true
log4j.appender.A2.File=${catalina.home}/logs/soa
log4j.appender.A2.DatePattern='_'yyyy-MM-dd'.log'
log4j.appender.A2.layout=org.apache.log4j.PatternLayout
log4j.appender.A2.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %-20C{1}.%-20M - %m%n

# A1 is set to be a ConsoleAppender which outputs to System.out.
log4j.appender.A1=org.apache.log4j.ConsoleAppender

# A1 uses PatternLayout.
log4j.appender.A1.layout=org.apache.log4j.PatternLayout

# The conversion pattern uses format specifiers. You might want to
# change the pattern an watch the output format change.
#log4j.appender.A1.layout.ConversionPattern=%-4r %-5p [%t] %37c %3x - %m%n
log4j.appender.A1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %-20C{1}.%-20M - %m%n


## PerformanceFilter
#log4j.logger.com.gm.gmcore.performance.PerformanceFilter=INFO,Performance
#log4j.appender.Performance=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.Performance.Threshold=INFO
#log4j.appender.Performance.Append=true
#log4j.appender.Performance.File=${catalina.home}/logs/performance
#log4j.appender.Performance.DatePattern='_'yyyy-MM-dd'.log'
#log4j.appender.Performance.layout=org.apache.log4j.PatternLayout
#log4j.appender.Performance.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %-20C{1}.%-20M - %m%n

# for package com.te, set level to DEBUG
log4j.logger.com.cf=INFO
